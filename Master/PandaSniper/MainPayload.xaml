<Page x:Class="PandaSniper.MainPayload"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PandaSniper"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      d:DesignHeight="674" d:DesignWidth="1030"
      Loaded="MainPayload_Loaded"
      Title="MainPayload">

    <Grid Background="#FF242525">
        <TabControl x:Name="MainPayloadPanel" Padding="0" ScrollViewer.CanContentScroll="True">
            <TabControl.Resources>
                <Style TargetType="{x:Type TabControl}">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Background" Value="#FF1E1E1E"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Focusable" Value="False"/>
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type TabItem}">
                                <Setter Property="FontFamily" Value="Consolas"/>
                                <Setter Property="Foreground" Value="#FF686868"/>
                                <Setter Property="Background" Value="#FF242525"/>
                                <Setter Property="FontSize" Value="14"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type TabItem}">
                                            <Grid Name="ControlPanelHeader" Margin="-2,-2,0,0">
                                                <Border Height="35"
                                                                Margin="15,0,15,0"
                                                                BorderThickness="0">
                                                    <ContentPresenter ContentSource="Header"
                                                                HorizontalAlignment="Center"
                                                                Name="Content"
                                                                VerticalAlignment="Center"
                                                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                                RecognizesAccessKey="True"
                                                                Content="{TemplateBinding HeaderedContentControl.Header}" />
                                                </Border>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="ControlPanelHeader" Property="Background" Value="#FF1E1E1E"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>

                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="Background" Value="#FF1E1E1E"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TabControl.Resources>
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" >
                        <materialDesign:PackIcon 
                            Foreground="#FFD4D7D6"
                            Kind="formatalignleft"
                            Height="11"
                            Width="11" VerticalAlignment="Center" Margin="0,0,5,0" />
                        <TextBlock Text="Listeners"/>
                    </StackPanel>
                </TabItem.Header>
                <Grid Margin="0,2,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="50"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <ListView x:Name="MainPayloadListView" 
                                  ScrollViewer.VerticalScrollBarVisibility="Disabled">
                            <ListView.Resources>

                                <!--ScrollViewer for a MenuItem-->
                                <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
                                <Style x:Key="MenuScrollViewer"
                               TargetType="{x:Type ScrollViewer}"
                               BasedOn="{x:Null}">
                                    <Setter Property="HorizontalScrollBarVisibility"
                                    Value="Hidden" />
                                    <Setter Property="VerticalScrollBarVisibility"
                                    Value="Auto" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                <Grid SnapsToDevicePixels="True">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto" />
                                                        <RowDefinition Height="*" />
                                                        <RowDefinition Height="Auto" />
                                                    </Grid.RowDefinitions>
                                                    <Border Grid.Row="1"
                                                    Grid.Column="0">
                                                        <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                                    <Setter Property="Height" Value="1" />
                                    <Setter Property="Margin" Value="4,2,4,2" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Separator}">
                                                <Border BorderThickness="1">
                                                    <Border.BorderBrush>
                                                        <SolidColorBrush Color="#FF4A4747" />
                                                    </Border.BorderBrush>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <!-- TopLevelHeader -->
                                <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Border">
                                        <Grid>
                                            <ContentPresenter Margin="6,3,6,3"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" />
                                            <Popup x:Name="Popup"
                                           Placement="Bottom"
                                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           PopupAnimation="Fade">
                                                <Border x:Name="SubmenuBorder"
                                                SnapsToDevicePixels="True"
                                                BorderThickness="1"
                                                Background="#FF252526">
                                                    <Border.BorderBrush>
                                                        <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                                    </Border.BorderBrush>
                                                    <ScrollViewer CanContentScroll="True" 
                                                          Style="{StaticResource MenuScrollViewer}">
                                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                    </ScrollViewer>
                                                </Border>
                                            </Popup>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                            <Setter TargetName="Popup" 
                                            Property="PopupAnimation"
                                            Value="None" />
                                        </Trigger>
                                        <Trigger Property="IsHighlighted"
                                         Value="true">
                                            <Setter TargetName="Border"
                                            Property="BorderBrush"
                                            Value="Transparent" />
                                            <Setter Property="Background"
                                            TargetName="Border"
                                            Value="#FF252526">
                                            </Setter>
                                        </Trigger>
                                        <Trigger SourceName="Popup"
                                         Property="AllowsTransparency"
                                         Value="True">
                                            <Setter TargetName="SubmenuBorder"
                                            Property="CornerRadius"
                                            Value="0,0,4,4" />
                                            <Setter TargetName="SubmenuBorder"
                                            Property="Padding"
                                            Value="0,0,0,3" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                                         Value="False">
                                            <Setter Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="#FFBABABA" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                                <!-- TopLevelItem -->
                                <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Border">
                                        <Grid>
                                            <ContentPresenter Margin="6,3,6,3"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsHighlighted"
                                         Value="true">
                                            <Setter Property="Background"
                                            TargetName="Border"
                                            Value="#FF252526">

                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground">
                                                <Setter.Value>
                                                    <SolidColorBrush Color="White" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                                <!-- SubmenuItem -->
                                <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Border" 
                                    BorderThickness="0" 
                                    Padding="6,0,0,0" 
                                    Margin="0,4,0,4"
                                    Cursor="Hand">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                                                <ColumnDefinition Width="13" />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter x:Name="Icon" 
                                                      Margin="6,0,6,0"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Icon" />
                                            <Border x:Name="Check"
                                            Width="13"
                                            Height="13"
                                            Visibility="Collapsed"
                                            Margin="6,0,6,0"
                                            BorderThickness="1">
                                                <Path x:Name="CheckMark"
                                              Width="7"
                                              Height="7"
                                              Visibility="Hidden"
                                              SnapsToDevicePixels="False"
                                              StrokeThickness="2"
                                              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                                    <Path.Stroke>
                                                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                                    </Path.Stroke>
                                                </Path>
                                            </Border>
                                            <ContentPresenter x:Name="HeaderHost"
                                                      Grid.Column="1"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" 
                                                      HorizontalAlignment="Left" 
                                                      VerticalAlignment="Center" />
                                            <TextBlock x:Name="InputGestureText"
                                               Grid.Column="2"
                                               Text="{TemplateBinding InputGestureText}"
                                               Margin="5,2,0,2"
                                               DockPanel.Dock="Right" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ButtonBase.Command"
                                         Value="{x:Null}" />
                                        <Trigger Property="Icon"
                                         Value="{x:Null}">
                                            <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Hidden" />
                                        </Trigger>
                                        <Trigger Property="IsChecked"
                                         Value="true">
                                            <Setter TargetName="CheckMark"
                                            Property="Visibility"
                                            Value="Visible" />
                                        </Trigger>
                                        <Trigger Property="IsCheckable"
                                         Value="true">
                                            <Setter TargetName="Check"
                                            Property="Visibility"
                                            Value="Visible" />
                                            <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Hidden" />
                                        </Trigger>
                                        <Trigger Property="IsHighlighted"
                                         Value="true">
                                            <Setter Property="Background"
                                            TargetName="Border"
                                            Value="#FF007ACC">
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                                <!-- SubmenuHeader -->
                                <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
                                    <Border x:Name="Border" 
                                    BorderThickness="0" 
                                    Padding="6,0,0,0" 
                                    Margin="0,4,0,4"
                                    Cursor="Hand">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter x:Name="Icon" 
                                                      Margin="6,0,6,0"
                                                      VerticalAlignment="Center"
                                                      ContentSource="Icon" />
                                            <ContentPresenter x:Name="HeaderHost"
                                                      Grid.Column="1"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" 
                                                      HorizontalAlignment="Left" 
                                                      VerticalAlignment="Center" />
                                            <TextBlock x:Name="InputGestureText"
                                               Grid.Column="2"
                                               Text="{TemplateBinding InputGestureText}"
                                               Margin="5,2,2,2"
                                               DockPanel.Dock="Right" />
                                            <materialDesign:PackIcon Kind="KeyboardArrowRight" 
                                                             Grid.Column="3"
                                                             Margin="5,0,5,0"
                                                             HorizontalAlignment="Center"
                                                             VerticalAlignment="Center"
                                                             Foreground="#FFBABABA"/>
                                            <Popup x:Name="Popup"
                                           Placement="Right"
                                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           PopupAnimation="Fade">
                                                <Border x:Name="SubmenuBorder"
                                                Margin="5,0,0,0"
                                                SnapsToDevicePixels="True"
                                                Background="#FF252526"
                                                BorderThickness="0">
                                                    <ScrollViewer CanContentScroll="True"
                                                          Style="{StaticResource MenuScrollViewer}">
                                                        <StackPanel IsItemsHost="True"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                    </ScrollViewer>
                                                </Border>
                                            </Popup>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter TargetName="Icon"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsHighlighted"
                                         Value="true">
                                            <Setter Property="Background"
                                            TargetName="Border"
                                            Value="#FF007ACC">

                                            </Setter>
                                            <Setter Property="BorderBrush"
                                            TargetName="Border"
                                            Value="#FF007ACC">
                                            </Setter>
                                        </Trigger>
                                        <Trigger SourceName="Popup"
                                         Property="AllowsTransparency"
                                         Value="True">

                                            <Setter TargetName="SubmenuBorder"
                                            Property="Padding"
                                            Value="0,3,0,3" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>

                                <!-- MenuItem Style -->
                                <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                                    <Setter Property="OverridesDefaultStyle"
                                    Value="True" />
                                    <Style.Triggers>
                                        <Trigger Property="Role"
                                         Value="TopLevelHeader">
                                            <Setter Property="Template"
                                            Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                                            <Setter Property="Grid.IsSharedSizeScope"
                                            Value="true" />
                                        </Trigger>
                                        <Trigger Property="Role"
                                         Value="TopLevelItem">
                                            <Setter Property="Template"
                                            Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
                                        </Trigger>
                                        <Trigger Property="Role"
                                         Value="SubmenuHeader">
                                            <Setter Property="Template"
                                            Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
                                        </Trigger>
                                        <Trigger Property="Role"
                                         Value="SubmenuItem">
                                            <Setter Property="Template"
                                         Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>

                                <Style TargetType="{x:Type GridViewColumnHeader}">
                                    <Setter Property="FontFamily" Value="Consolas"/>
                                    <Setter Property="Foreground" Value="#FFCFCFCF"/>
                                    <Setter Property="FontSize" Value="14"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">

                                                <Grid Name="Header" Background="#FF3A3734" Height="25">
                                                    <Border Name="HeaderBorder" BorderThickness="0,0,0,0.3" BorderBrush="#FF757577">
                                                        <ContentPresenter Margin="8,0,8,0" VerticalAlignment="Center"/>
                                                    </Border>
                                                    <GridSplitter Width="1" Height="20" Background="#FF686868"></GridSplitter>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>

                                <!--<Style TargetType="{x:Type ContextMenu}">
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                                    <Setter Property="Foreground" Value="#FFBABABA" />
                                    <Setter Property="HasDropShadow" Value="False" />
                                    <Setter Property="Background" Value="#FF252526" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ContextMenu}">
                                                <Border x:Name="Border" Background="#FF252526" BorderThickness="0">
                                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasDropShadow" Value="true">
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <ContextMenu x:Key="ItemContextMenu">
                                    <MenuItem Header="Interact" x:Name="MenuItemInteract" Click="MenuItemInteract_Click" Command="{Binding Path, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                                    <Separator Style="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}"></Separator>
                                    <MenuItem Header="Session" Command="{Binding Path, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}">
                                        <MenuItem Header="Sleep" />
                                        <MenuItem Header="Exit" />
                                    </MenuItem>
                                </ContextMenu>-->

                            </ListView.Resources>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="SnapsToDevicePixels" Value="true" />
                                    <Setter Property="OverridesDefaultStyle" Value="true" />
                                    <Setter Property="Height" Value="20"/>
                                    <Setter Property="Width" Value="{Binding ActualWidth, ElementName=MainPayloadListView}"/>
                                    <!--<Setter Property="ContextMenu" Value="{StaticResource ItemContextMenu}" />-->
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border x:Name="Border"  
                                                SnapsToDevicePixels="true" 
                                                Background="Transparent"
                                                Cursor="Hand">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal" />
                                                            <VisualState x:Name="MouseOver" />
                                                            <VisualState x:Name="Disabled" />
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="SelectionStates">
                                                            <VisualState x:Name="Unselected" />
                                                            <VisualState x:Name="Selected">
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0" Value="#FF007ACC" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="SelectedUnfocused">
                                                                <Storyboard>
                                                                    <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                                        <EasingColorKeyFrame KeyTime="0" Value="#FF007ACC" />
                                                                    </ColorAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView x:Name="MainPayloadGridView">
                                    <GridView.Columns>
                                        <GridViewColumn Header="name" x:Name="GridViewName">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <DockPanel Height="20" 
                                                       Width="{Binding ActualWidth, ElementName=GridViewName}">
                                                        <TextBlock Foreground="#FFBABABA" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <TextBlock.Text>
                                                                <Binding Path="Name"/>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="payload" x:Name="GridViewPayload">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <DockPanel Height="20" 
                                                       Width="{Binding ActualWidth, ElementName=GridViewPayload}">
                                                        <TextBlock Foreground="#FFBABABA" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <TextBlock.Text>
                                                                <Binding Path="Payload"/>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="hosts" x:Name="GridViewHosts">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <DockPanel Height="20" 
                                                       Width="{Binding ActualWidth, ElementName=GridViewHosts}">
                                                        <TextBlock Foreground="#FFBABABA" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <TextBlock.Text>
                                                                <Binding Path="Hosts"/>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="port" x:Name="GridViewPort">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <DockPanel Height="20" 
                                                       Width="{Binding ActualWidth, ElementName=GridViewPort}">
                                                        <TextBlock Foreground="#FFBABABA" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <TextBlock.Text>
                                                                <Binding Path="Port"/>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="bindto" x:Name="GridViewBindTo">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <DockPanel Height="20" 
                                                       Width="{Binding ActualWidth, ElementName=GridViewBindTo}">
                                                        <TextBlock Foreground="#FFBABABA" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <TextBlock.Text>
                                                                <Binding Path="BindTo"/>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="header" x:Name="GridViewHeader">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <DockPanel Height="20" 
                                                       Width="{Binding ActualWidth, ElementName=GridViewHeader}">
                                                        <TextBlock Foreground="#FFBABABA" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <TextBlock.Text>
                                                                <Binding Path="Header"/>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="proxy" x:Name="GridViewProxy">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <DockPanel Height="20" 
                                                       Width="{Binding ActualWidth, ElementName=GridViewProxy}">
                                                        <TextBlock Foreground="#FFBABABA" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <TextBlock.Text>
                                                                <Binding Path="Proxy"/>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                        <GridViewColumn Header="profile" x:Name="GridViewProfile">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <DockPanel Height="20" 
                                                       Width="{Binding ActualWidth, ElementName=GridViewProfile}">
                                                        <TextBlock Foreground="#FFBABABA" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                            <TextBlock.Text>
                                                                <Binding Path="Profile"/>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DockPanel>
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>
                    <Grid Grid.Row="1">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <Button Style="{x:Null}"
                                    x:Name="ListenerAdd"
                                    Padding="0"
                                    Margin="0,0,10,0"
                                    Height="25" 
                                    BorderBrush="{x:Null}" 
                                    Background="{x:Null}" 
                                    Foreground="{x:Null}" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    MouseEnter="ListenerAdd_MouseEnter"
                                    MouseLeave="ListenerAdd_MouseLeave"
                                    Click="ListenerAdd_Click">
                                <Border Height="25" Width="70" Margin="0" Background="#FF1177BB" BorderThickness="0">
                                    <TextBlock Text="Add" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                </Border>
                            </Button>
                            <Button Style="{x:Null}"
                                    x:Name="ListenerEdit"
                                    Padding="0"
                                    Margin="0,0,10,0"
                                    Height="25" 
                                    BorderBrush="{x:Null}" 
                                    Background="{x:Null}" 
                                    Foreground="{x:Null}" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    MouseEnter="ListenerEdit_MouseEnter"
                                    MouseLeave="ListenerEdit_MouseLeave"
                                    Click="ListenerEdit_Click">
                                <Border Height="25" Width="70" Margin="0" Background="#FF1177BB" BorderThickness="0">
                                    <TextBlock Text="Edit" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                </Border>
                            </Button>
                            <Button Style="{x:Null}"
                                    x:Name="ListenerRemove"
                                    Padding="0"
                                    Margin="0,0,10,0"
                                    Height="25" 
                                    BorderBrush="{x:Null}" 
                                    Background="{x:Null}" 
                                    Foreground="{x:Null}" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    MouseEnter="ListenerRemove_MouseEnter"
                                    MouseLeave="ListenerRemove_MouseLeave"
                                    Click="ListenerRemove_Click">
                                <Border Height="25" Width="70" Margin="0" Background="#FF1177BB" BorderThickness="0">
                                    <TextBlock Text="Remove" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                </Border>
                            </Button>
                            <Button Style="{x:Null}"
                                    x:Name="ListenerRestart"
                                    Padding="0"
                                    Margin="0,0,10,0"
                                    Height="25" 
                                    BorderBrush="{x:Null}" 
                                    Background="{x:Null}" 
                                    Foreground="{x:Null}" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    MouseEnter="ListenerRestart_MouseEnter"
                                    MouseLeave="ListenerRestart_MouseLeave"
                                    Click="ListenerRestart_Click">
                                <Border Height="25" Width="70" Margin="0" Background="#FF1177BB" BorderThickness="0">
                                    <TextBlock Text="Restart" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                </Border>
                            </Button>
                            <Button Style="{x:Null}"
                                    x:Name="ListenerHelp"
                                    Padding="0"
                                    Margin="0,0,10,0"
                                    Height="25" 
                                    BorderBrush="{x:Null}" 
                                    Background="{x:Null}" 
                                    Foreground="{x:Null}" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    MouseEnter="ListenerHelp_MouseEnter"
                                    MouseLeave="ListenerHelp_MouseLeave"
                                    Click="ListenerHelp_Click">
                                <Border Height="25" Width="70" Margin="0" Background="#FF1177BB" BorderThickness="0">
                                    <TextBlock Text="Help" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                                </Border>
                            </Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Grid PreviewMouseUp="TI_Attacks_PreviewMouseUp"
                          Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
                          Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}">
                    <StackPanel Orientation="Horizontal" >
                        <materialDesign:PackIcon 
                            Foreground="#FFD4D7D6"
                            Kind="formatalignleft"
                            Height="11"
                            Width="11" VerticalAlignment="Center" Margin="0,0,5,0" />
                        <TextBlock Text="Attacks"/>
                    </StackPanel>
                    </Grid>
                </TabItem.Header>
                <Grid Margin="0,15,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Border Margin="25,0,25,0" BorderThickness="0,1,0,0" BorderBrush="#FF323233"/>
                    </Grid>
                    <Grid Grid.Row="1" Margin="30,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="220"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TreeView Grid.Column="0" x:Name="Attack_TreeView">
                            <TreeView.Resources>
                                <Style x:Key="{x:Type TreeView}" TargetType="TreeView">
                                    <Setter Property="OverridesDefaultStyle" Value="True" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TreeView">
                                                <Border>
                                                    <ScrollViewer Focusable="False" CanContentScroll="False" Padding="4">
                                                        <ItemsPresenter />
                                                    </ScrollViewer>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="FontSize" Value="13"/>
                                    <Setter Property="Foreground" Value="#FFBABABA"/>
                                    <Setter Property="Margin" Value="0,5,0,0"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                                <Grid>
                                                    <!--<Grid.ColumnDefinitions>
                                                        <ColumnDefinition MinWidth="19" Width="Auto" />
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>-->
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="20" />
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="ExpansionStates">
                                                            <VisualState x:Name="Expanded">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Collapsed">
                                                                
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <StackPanel Orientation="Horizontal" Grid.Row="0" x:Name="SP_Item">
                                                        <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                                                  Style="{StaticResource MaterialDesignExpandCollapseToggleStyle}"
                                                                  Foreground="{TemplateBinding Foreground}"
                                                                  Margin="0,0,8,0"
                                                                  VerticalAlignment="Center" />
                                                        <Border x:Name="Bd" 
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Padding="{TemplateBinding Padding}">
                                                            <ContentPresenter x:Name="PART_Header"
                                                                          ContentSource="Header"
                                                                          HorizontalAlignment="Center" 
                                                                          VerticalAlignment="Center"/>
                                                        </Border>
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="8,0,0,0">
                                                        <ItemsPresenter x:Name="ItemsHost" Visibility="Collapsed"/>
                                                    </StackPanel>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasItems" Value="false">
                                                        <Setter TargetName="Expander"
                                                                Property="Visibility"
                                                                Value="Hidden" />
                                                    </Trigger>
                                
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="HasHeader" Value="false" />
                                                            <Condition Property="Width" Value="Auto" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="HasHeader" Value="false" />
                                                            <Condition Property="Height" Value="Auto" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                                    </MultiTrigger>

                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Foreground" Value="White" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsSelected" Value="True" />
                                                            <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                        </MultiTrigger.Conditions>
                                                        
                                                        <Setter Property="Foreground" Value="White" />
                                                    </MultiTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                            </TreeView.Resources>
                            <TreeViewItem x:Name="TVI_Packages" IsExpanded="True">
                                <TreeViewItem.Header>
                                    <TextBlock Text="Packages" PreviewMouseUp="TVI_Packages_PreviewMouseUp"/>
                                </TreeViewItem.Header>
                                <TreeViewItem x:Name="TVI_PayloadGeneragor">
                                    <TreeViewItem.Header>
                                        <TextBlock Text="Payload Generagor" PreviewMouseUp="TVI_PayloadGeneragor_PreviewMouseUp"/>
                                    </TreeViewItem.Header>
                                </TreeViewItem>
                                <TreeViewItem x:Name="TVI_LinuxExecutable" >
                                    <TreeViewItem.Header>
                                        <TextBlock Text="Linux Executable" PreviewMouseUp="TVI_LinuxExecutable_PreviewMouseUp"/>
                                    </TreeViewItem.Header>
                                </TreeViewItem>
                                <TreeViewItem x:Name="TVI_LinuxExecutableS">
                                    <TreeViewItem.Header>
                                        <TextBlock Text="Linux Executable (S)" PreviewMouseUp="TVI_LinuxExecutableS_PreviewMouseUp"/>
                                    </TreeViewItem.Header>
                                </TreeViewItem>
                            </TreeViewItem>
                            <TreeViewItem x:Name="TVI_WebDriveBy">
                                <TreeViewItem.Header>
                                    <TextBlock Text="Web Drive-by" PreviewMouseUp="TVI_WebDriveBy_PreviewMouseUp"/>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                            <TreeViewItem x:Name="TVI_SpearPhish">
                                <TreeViewItem.Header>
                                    <TextBlock Text="Spear Phish" PreviewMouseUp="TVI_SpearPhish_PreviewMouseUp"/>
                                </TreeViewItem.Header>
                            </TreeViewItem>
                        </TreeView>
                        <ContentControl x:Name="AttacksChangePage" Grid.Column="1"/>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Page>
