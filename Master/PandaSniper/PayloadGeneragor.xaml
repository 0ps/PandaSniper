<Page x:Class="PandaSniper.PayloadGeneragor"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:PandaSniper"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="PayloadGeneragor">
    <Page.Resources>
        <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Back" Background="#FF3C3C3C" BorderThickness="0">
                            <ContentPresenter ContentSource="{Binding Source}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Back" Property="Background" Value="#FF007ACC"></Setter>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <!--<Setter TargetName="Back" Property="Background" Value="#FF007ACC"></Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" SnapsToDevicePixels="true" 
                                Background="#FF3C3C3C" 
                                BorderThickness="1" 
                                BorderBrush="#FF3C3C3C">
                            <Border x:Name="splitBorder"
                                    Width="20" 
                                    SnapsToDevicePixels="true" 
                                    Margin="0,0,3,0"
                                    Background="#FF3C3C3C"
                                    HorizontalAlignment="Right">
                                <Path x:Name="arrow" 
                                      VerticalAlignment="Center"  
                                      Stretch="Fill" 
                                      Height="8" Width="12" 
                                      HorizontalAlignment="Center" 
                                      Fill="#FFE7E7E7" 
                                      Data="M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF565656"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="#FFADADAD"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" 
                       Grid.ColumnSpan="2" 
                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                       Margin="1"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Border x:Name="dropDownBorder" 
                            Background="#FF3C3C3C"
                            MaxHeight="156" 
                            MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="opaqueRect" 
                                               Fill="{Binding Background, ElementName=dropDownBorder}" 
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                </Canvas>
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Continue" Background="#FF3C3C3C"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                    <Grid>
                        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{StaticResource ComboBoxToggleButton}"/>
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>

                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="26"/>
                </Trigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="#FF3C3C3C"/>
            <Setter Property="BorderBrush" Value="#FF3C3C3C"/>
            <Setter Property="Foreground" Value="#FFE7E7E7"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStyle}"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                            Width="18"
                                            Height="18"
                                            Margin="0,3,0,0"
                                            CornerRadius="2"
                                            Background="#FF313131">
                                    <Grid>
                                        <!--#FFE7E7E7-->
                                        <materialDesign:PackIcon Kind="Check" Visibility="Collapsed"
                                                                 Foreground="#FFE7E7E7"
                                                                 x:Name="CheckMark"
                                                                 Width="18"
                                                                 Height="18"/>
                                        <materialDesign:PackIcon Kind="Check" Visibility="Collapsed"
                                                                 Foreground="#FFE7E7E7"
                                                                 x:Name="InderminateMark"
                                                                 Width="18"
                                                                 Height="18"/>
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF3C3C3C" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="InderminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="#FF1E1E1E">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="25"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="23"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <materialDesign:PackIcon Kind="Cog" Grid.Row="1" Grid.Column="0"
                                 Height="17"
                                 Width="17"
                                 Margin="0,0,8,0"
                                 Foreground="#FFE7E7E7" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center"/>
        <StackPanel Grid.Row="1" Grid.Column="1">
            <TextBlock
                   HorizontalAlignment="Left" 
                   Foreground="#FFE7E7E7" 
                   FontSize="18" 
                   VerticalAlignment="Center">PayloadGeneragor</TextBlock>
        </StackPanel>
        <Grid Grid.Column="1" Grid.Row="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="90"/>
                <RowDefinition Height="90"/>
                <RowDefinition Height="62"/>
                <RowDefinition Height="35"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBox SelectionBrush="{x:Null}" Grid.Row="0"
                     BorderBrush="{x:Null}" 
                     Background="{x:Null}" 
                     CaretBrush="{x:Null}" 
                     Foreground="#FFBABABA" >
                This panel generates a payload to stage a Panda Sniper listener. Several output options are available.
            </TextBox>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,15,0,0">
                    <TextBlock
                            Foreground="#FFBABABA"
                            Text="Listener:" VerticalAlignment="Center" FontWeight="Bold">
                    </TextBlock>
                    <TextBlock 
                            Foreground="#FFE7E7E7"
                            Text=" 选择一个监听器" VerticalAlignment="Center">
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,3,0,5">
                    <TextBlock
                            Foreground="#FFBABABA"
                            Text="用于接收Implant返回的数据,增加新的监听器请点击" VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Cursor="Hand"
                            Foreground="#FF3489EC"
                            Text=" ADD" VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock
                            Foreground="#FFBABABA"
                            Text="。" VerticalAlignment="Center">
                    </TextBlock>
                </StackPanel>
                <ComboBox Grid.Row="2" Cursor="Hand"
                          Foreground="#FFE7E7E7" Background="#FF3C3C3C" BorderBrush="{x:Null}"
                          Height="26"
                          Width="300"
                          Style="{DynamicResource ComboBoxStyle}"
                          SelectedIndex="0"
                          HorizontalAlignment="Left">
                    <ComboBoxItem>
                        HTTPS-443
                    </ComboBoxItem>
                    <ComboBoxItem>
                        HTTP-80
                    </ComboBoxItem>
                    <ComboBoxItem>
                        DNS-53
                    </ComboBoxItem>
                    <ComboBoxItem>
                        TCP-8888
                    </ComboBoxItem>
                </ComboBox>
            </Grid>
            <Grid Grid.Row="2" Margin="0,2,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="28"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,15,0,0">
                    <TextBlock
                            Foreground="#FFBABABA"
                            Text="Output:" VerticalAlignment="Center" FontWeight="Bold">
                    </TextBlock>
                    <TextBlock 
                            Foreground="#FFE7E7E7"
                            Text=" 选择样式" VerticalAlignment="Center">
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,3,0,5">
                    <TextBlock
                            Foreground="#FFBABABA"
                            Text="选择不同的样式,输出不同编程语言可以使用的Stager样式。" VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Cursor="Hand"
                            Foreground="#FF3489EC"
                            Text="" VerticalAlignment="Center">
                    </TextBlock>
                </StackPanel>
                <ComboBox Grid.Row="2" Cursor="Hand"
                          Foreground="#FFE7E7E7" Background="#FF3C3C3C" BorderBrush="{x:Null}"
                          Height="26"
                          Width="300"
                          Style="{DynamicResource ComboBoxStyle}"
                          SelectedIndex="0"
                          HorizontalAlignment="Left">
                    <ComboBoxItem>
                        C
                    </ComboBoxItem>
                    <ComboBoxItem>
                        C#
                    </ComboBoxItem>
                    <ComboBoxItem>
                        COM Scriptlet
                    </ComboBoxItem>
                    <ComboBoxItem>
                        Java
                    </ComboBoxItem>
                    <ComboBoxItem>
                        PowerShell
                    </ComboBoxItem>
                    <ComboBoxItem>
                        PowerShell Command
                    </ComboBoxItem>
                    <ComboBoxItem>
                        Python
                    </ComboBoxItem>
                    <ComboBoxItem>
                        Raw
                    </ComboBoxItem>
                    <ComboBoxItem>
                        Ruby
                    </ComboBoxItem>
                    <ComboBoxItem>
                        Veil
                    </ComboBoxItem>
                    <ComboBoxItem>
                        VBA
                    </ComboBoxItem>
                </ComboBox>
            </Grid>
            <Grid Grid.Row="3" Margin="0,2,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,15,0,0">
                    <TextBlock
                            Foreground="#FFBABABA"
                            Text="X64:" VerticalAlignment="Center" FontWeight="Bold">
                    </TextBlock>
                    <TextBlock 
                            Foreground="#FFE7E7E7"
                            Text=" 是否是64位系统" VerticalAlignment="Center">
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,3,0,5">
                    <CheckBox Style="{DynamicResource CheckBoxStyle}" Cursor="Hand">
                        <TextBlock
                            Foreground="#FFBABABA"
                            Text="生成支持64位系统的Stager。" VerticalAlignment="Center">
                        </TextBlock>
                    </CheckBox>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="4">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" >
                    <Button Style="{x:Null}"
                                    x:Name="PayloadGeneragorAdd"
                                    Padding="0"
                                    Margin="0,0,0,0"
                                    Height="25"
                                    BorderThickness="0"
                                    Cursor="Hand"
                                    BorderBrush="{x:Null}" 
                                    Background="{x:Null}" 
                                    Foreground="{x:Null}" 
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center" 
                                    MouseEnter="PayloadGeneragorAdd_MouseEnter"
                                    MouseLeave="PayloadGeneragorAdd_MouseLeave"
                                    Click="PayloadGeneragorAdd_Click">
                        <Border Height="25" Width="70" Margin="1" Background="#FF1177BB" BorderThickness="0">
                            <TextBlock Text="Add" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White"/>
                        </Border>
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
        
    </Grid>
</Page>
